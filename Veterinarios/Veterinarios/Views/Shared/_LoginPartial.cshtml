@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> _signInManager
@inject UserManager<ApplicationUser> _userManager
@*
    @inject SignInManager<IdentityUser> SignInManager
    @inject UserManager<IdentityUser> UserManager
*@

<ul class="navbar-nav">
    @if (_signInManager.IsSignedIn(User)) {
        // se estou aqui, é pq estou autenticado
        var utilizador = await _userManager.GetUserAsync(User);
        string nomeUser = utilizador.NomeBatismo;
        var rolesUser = await _userManager.GetRolesAsync(utilizador);

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Bem vindo(a) @nomeUser!
                @foreach (string perfil in rolesUser ?? Enumerable.Empty<string>()) {
                    <text> -<i>@perfil</i> </text>
                }
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Sair</button>
            </form>
        </li>
    }
    else {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Registar</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Entrar</a>
        </li>
    }
</ul>
